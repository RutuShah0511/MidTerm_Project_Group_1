{
	"name": "Title_Basics_Raw_2_Flattened",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet6",
						"type": "DatasetReference"
					},
					"name": "TitleBasicsRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet7",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          tconst as string,",
				"          titleType as string,",
				"          primaryTitle as string,",
				"          originalTitle as string,",
				"          isAdult as integer,",
				"          startYear as string,",
				"          endYear as string,",
				"          runtimeMinutes as short,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> TitleBasicsRaw",
				"TitleBasicsRaw derive(genres = toString(genres)) ~> derivedColumn1",
				"derivedColumn1 derive(genres = split(replace(replace(replace(genres, \"[\", \"\"), \"]\", \"\"), \"\\\"\", \"\"), \",\")) ~> derivedColumn2",
				"derivedColumn2 foldDown(unroll(genres),",
				"     mapColumn(",
				"          tconst,",
				"          titleType,",
				"          primaryTitle,",
				"          originalTitle,",
				"          isAdult,",
				"          startYear,",
				"          endYear,",
				"          runtimeMinutes,",
				"          genres",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          tconst as string,",
				"          titleType as string,",
				"          primaryTitle as string,",
				"          originalTitle as string,",
				"          isAdult as integer,",
				"          startYear as string,",
				"          endYear as string,",
				"          runtimeMinutes as short,",
				"          genres as string",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          TCONST = tconst,",
				"          TITLETYPE = titleType,",
				"          PRIMARYTITLE = primaryTitle,",
				"          ORIGINALTITLE = originalTitle,",
				"          ISADULT = isAdult,",
				"          STARTYEAR = startYear,",
				"          ENDYEAR = endYear,",
				"          RUNTIMEMINUTES = runtimeMinutes,",
				"          GENRES = genres",
				"     )) ~> sink1"
			]
		}
	}
}